from array import *
import sys
from turtle import pu


if (len(sys.argv) <= 4):
    print("usage main.py [age] [pushup] [situp] [run]")


age = int(sys.argv[1])
print(age)
pushup = int(sys.argv[2])
situp = int(sys.argv[3])
total_points = 0

if(len(sys.argv) == 5):
    running = sys.argv[4]
    print(running)
    if ":" in running:
        min = int(running.split(":")[0])
        sec = int(running.split(":")[1])
    elif "." in running:
        min = int(running.split(".")[0])
        sec = int(running.split(".")[1])
    else:
        min = int(running)
        sec = 0


PUSHUP_TABLE = [
    [25],
    [24, 25],
    [24, 24, 25],
    [24, 24, 24, 25],
    [24, 24, 24, 24, 25],
    [23, 24, 24, 24, 24, 25],
    [23, 23, 24, 24, 24, 24, 25],
    [23, 23, 23, 24, 24, 24, 24, 25],
    [23, 23, 23, 23, 24, 24, 24, 24],
    [22, 23, 23, 23, 23, 24, 24, 24, 25],
    [22, 22, 23, 23, 23, 23, 24, 24, 24],
    [22, 22, 22, 23, 23, 23, 23, 24, 24, 25],
    [22, 22, 22, 22, 23, 23, 23, 23, 24, 24],
    [21, 22, 22, 22, 22, 23, 23, 23, 24, 24, 25],
    [21, 21, 22, 22, 22, 22, 23, 23, 23, 24, 24],
    [21, 21, 21, 22, 22, 22, 22, 23, 23, 24, 24, 25],
    [21, 21, 21, 21, 22, 22, 22, 22, 23, 23, 24, 24],
    [20, 21, 21, 21, 21, 22, 22, 22, 23, 23, 24, 24],
    [20, 20, 21, 21, 21, 21, 22, 22, 22, 23, 23, 24, 25],
    [20, 20, 20, 21, 21, 21, 21, 22, 22, 23, 23, 24, 24],
    [20, 20, 20, 20, 21, 21, 21, 21, 22, 22, 23, 23, 24, 25],
    [19, 20, 20, 20, 20, 21, 21, 21, 22, 22, 23, 23, 24, 24],
    [19, 19, 20, 20, 20, 20, 21, 21, 21, 22, 22, 23, 23, 24],
    [19, 19, 19, 20, 20, 20, 20, 21, 21, 22, 22, 22, 23, 24],
    [18, 19, 19, 19, 20, 20, 20, 20, 21, 21, 22, 22, 23, 23],
    [18, 18, 19, 19, 19, 20, 20, 20, 21, 21, 21, 22, 22, 23],
    [18, 18, 18, 19, 19, 19, 20, 20, 20, 21, 21, 21, 22, 23],
    [17, 18, 18, 18, 19, 19, 19, 20, 20, 20, 21, 21, 22, 22],
    [17, 17, 18, 18, 18, 19, 19, 19, 20, 20, 20, 21, 21, 22],
    [17, 17, 17, 18, 18, 18, 19, 19, 19, 20, 20, 20, 21, 22],
    [16, 17, 17, 17, 18, 18, 18, 19, 19, 19, 20, 20, 21, 21],
    [16, 16, 17, 17, 17, 18, 18, 18, 19, 19, 19, 20, 20, 21],
    [16, 16, 16, 17, 17, 17, 18, 18, 18, 19, 19, 19, 20, 20],
    [15, 16, 16, 16, 17, 17, 17, 18, 18, 18, 19, 19, 19, 20],
    [15, 15, 16, 16, 16, 17, 17, 17, 18, 18, 18, 19, 19, 19],
    [14, 15, 15, 16, 16, 16, 17, 17, 17, 18, 18, 18, 19, 19],
    [13, 14, 15, 15, 16, 16, 16, 17, 17, 17, 18, 18, 18, 19],
    [12, 13, 14, 15, 15, 16, 16, 16, 17, 17, 17, 18, 18, 18],
    [11, 12, 13, 14, 15, 15, 16, 16, 16, 17, 17, 17, 18, 18],
    [10, 11, 12, 13, 14, 15, 15, 16, 16, 16, 17, 17, 17, 18],
    [9, 10, 11, 12, 13, 14, 15, 15, 16, 16, 16, 17, 17, 17],
    [8, 9, 10, 11, 12, 13, 14, 15, 15, 16, 16, 16, 17, 17],
    [6, 8, 9, 10, 11, 12, 13, 14, 15, 15, 16, 16, 16, 17],
    [4, 6, 8, 9, 10, 11, 12, 13, 14, 15, 15, 16, 16, 16],
    [2, 4, 6, 8, 9, 10, 11, 12, 13, 14, 15, 15, 16, 16],
    [1, 2, 4, 6, 8, 9, 10, 11, 12, 13, 14, 15, 15, 16],
    [0, 1, 2, 4, 6, 8, 9, 10, 11, 12, 13, 14, 15, 15],
    [0, 0, 1, 2, 4, 6, 8, 9, 10, 11, 12, 13, 14, 15],
    [0, 0, 0, 1, 2, 4, 6, 8, 9, 10, 11, 12, 13, 14],
    [0, 0, 0, 0, 1, 2, 4, 6, 8, 9, 10, 11, 12, 13],
    [0, 0, 0, 0, 0, 1, 2, 4, 6, 8, 9, 10, 11, 12],
    [0, 0, 0, 0, 0, 0, 1, 2, 4, 6, 8, 9, 10, 11],
    [0, 0, 0, 0, 0, 0, 0, 1, 2, 4, 6, 8, 9, 10],
    [0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 4, 6, 8, 9],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 4, 6, 8],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 4, 6],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 4],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
]

SITUP_TABLE = [
    [25],
    [24, 25],
    [24, 24, 25],
    [24, 24, 24, 25],
    [24, 24, 24, 24, 25],
    [23, 24, 24, 24, 24, 25],
    [23, 23, 24, 24, 24, 24, 25],
    [23, 23, 23, 24, 24, 24, 24, 25],
    [23, 23, 23, 23, 24, 24, 24, 24],
    [22, 23, 23, 23, 23, 24, 24, 24, 25],
    [22, 22, 23, 23, 23, 23, 24, 24, 24],
    [22, 22, 22, 23, 23, 23, 23, 24, 24, 25],
    [22, 22, 22, 22, 23, 23, 23, 23, 24, 24, 25],
    [21, 22, 22, 22, 22, 23, 23, 23, 24, 24, 24],
    [21, 21, 22, 22, 22, 22, 23, 23, 23, 24, 24, 25],
    [21, 21, 21, 22, 22, 22, 22, 23, 23, 24, 24, 24],
    [21, 21, 21, 21, 22, 22, 22, 22, 23, 23, 24, 24, 25],
    [20, 21, 21, 21, 21, 22, 22, 22, 23, 23, 23, 24, 24],
    [20, 20, 21, 21, 21, 21, 22, 22, 22, 23, 23, 24, 24, 25],
    [20, 20, 20, 21, 21, 21, 21, 22, 22, 23, 23, 23, 24, 24],
    [20, 20, 20, 20, 21, 21, 21, 21, 22, 22, 23, 23, 24, 24],
    [19, 20, 20, 20, 20, 21, 21, 21, 22, 22, 22, 23, 23, 24],
    [19, 19, 20, 20, 20, 20, 21, 21, 21, 22, 22, 23, 23, 23],
    [18, 19, 19, 20, 20, 20, 20, 21, 21, 22, 22, 22, 23, 23],
    [18, 18, 19, 19, 20, 20, 20, 20, 21, 21, 22, 22, 22, 23],
    [17, 18, 18, 19, 19, 20, 20, 20, 21, 21, 21, 22, 22, 22],
    [16, 17, 18, 18, 19, 19, 20, 20, 20, 21, 21, 21, 22, 22],
    [15, 16, 17, 18, 18, 19, 19, 20, 20, 20, 21, 21, 21, 22],
    [14, 15, 16, 17, 18, 18, 19, 19, 20, 20, 20, 21, 21, 21],
    [14, 14, 15, 16, 17, 18, 18, 19, 19, 20, 20, 20, 21, 21],
    [13, 14, 14, 15, 16, 17, 18, 18, 19, 19, 20, 20, 20, 21],
    [13, 13, 14, 14, 15, 16, 17, 18, 18, 19, 19, 20, 20, 20],
    [12, 13, 13, 14, 14, 15, 16, 17, 18, 18, 19, 19, 20, 20],
    [11, 12, 13, 13, 14, 14, 15, 16, 17, 18, 18, 19, 19, 20],
    [10, 11, 12, 13, 13, 14, 14, 15, 16, 17, 18, 18, 19, 19],
    [9, 10, 11, 12, 13, 13, 14, 14, 15, 16, 17, 18, 18, 19],
    [8, 9, 10, 11, 12, 13, 13, 14, 14, 15, 16, 17, 18, 18],
    [7, 8, 9, 10, 11, 12, 13, 13, 14, 14, 15, 16, 17, 18],
    [7, 7, 8, 9, 10, 11, 12, 13, 13, 14, 14, 15, 16, 17],
    [6, 7, 7, 8, 9, 10, 11, 12, 13, 13, 14, 14, 15, 16],
    [6, 6, 7, 7, 8, 9, 10, 11, 12, 13, 13, 14, 14, 15],
    [5, 6, 6, 7, 7, 8, 9, 10, 11, 12, 13, 13, 14, 14],
    [4, 5, 6, 6, 7, 7, 8, 9, 10, 11, 12, 13, 13, 14],
    [3, 4, 5, 6, 6, 7, 7, 8, 9, 10, 11, 12, 13, 13],
    [2, 3, 4, 5, 6, 6, 7, 7, 8, 9, 10, 11, 12, 13],
    [1, 2, 3, 4, 5, 6, 6, 7, 7, 8, 9, 10, 11, 12],
    [0, 1, 2, 3, 4, 5, 6, 6, 7, 7, 8, 9, 10, 11],
    [0, 0, 1, 2, 3, 4, 5, 6, 6, 7, 7, 8, 9, 10],
    [0, 0, 0, 1, 2, 3, 4, 5, 6, 6, 7, 7, 8, 9],
    [0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 6, 7, 7, 8],
    [0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 6, 7, 7],
    [0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 6, 7],
    [0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 6],
    [0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
]

RUN_TABLE = [
    [50],
    [49, 50],
    [48, 49, 50],
    [47, 48, 49],
    [46, 47, 48, 50],
    [45, 46, 47, 49, 50],
    [44, 45, 46, 48, 49, 50],
    [43, 44, 45, 47, 48, 49, 50],
    [42, 43, 44, 46, 47, 48, 49, 50],
    [41, 42, 43, 45, 46, 47, 48, 49, 50],
    [40, 41, 42, 44, 45, 46, 47, 48, 49, 50],
    [39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50],
    [38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50],
    [38, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50],
    [37, 38, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50],
    [37, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49],
    [36, 37, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48],
    [36, 36, 37, 38, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47],
    [35, 36, 36, 37, 38, 38, 39, 40, 41, 42, 43, 44, 45, 46],
    [35, 35, 36, 37, 37, 38, 38, 39, 40, 41, 42, 43, 44, 45],
    [34, 35, 35, 36, 37, 37, 38, 38, 39, 40, 41, 42, 43, 44],
    [33, 34, 35, 36, 36, 37, 37, 38, 38, 39, 40, 41, 42, 43],
    [32, 33, 34, 35, 36, 36, 37, 37, 38, 38, 39, 40, 41, 42],
    [31, 32, 33, 35, 35, 36, 36, 37, 37, 38, 38, 39, 40, 41],
    [30, 31, 32, 34, 35, 35, 36, 36, 37, 37, 38, 38, 39, 40],
    [29, 30, 31, 33, 34, 35, 35, 36, 36, 37, 37, 38, 38, 39],
    [28, 29, 30, 32, 33, 34, 35, 35, 36, 36, 37, 37, 38, 38],
    [27, 28, 29, 31, 32, 33, 34, 35, 35, 36, 36, 37, 37, 38],
    [26, 27, 28, 30, 31, 32, 33, 34, 35, 35, 36, 36, 37, 37],
    [25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 35, 36, 36, 37],
    [24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 35, 36, 36],
    [23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 35, 36],
    [22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 35],
    [21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35],
    [20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34],
    [19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33],
    [18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32],
    [16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31],
    [14, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30],
    [12, 14, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29],
    [10, 12, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28],
    [8, 10, 12, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27],
    [6, 8, 10, 14, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26],
    [4, 6, 8, 12, 14, 16, 18, 19, 20, 21, 22, 23, 24, 25],
    [2, 4, 6, 10, 12, 14, 16, 18, 19, 20, 21, 22, 23, 24],
    [1, 2, 4, 8, 10, 12, 14, 16, 18, 19, 20, 21, 22, 23],
    [0, 1, 2, 6, 8, 10, 12, 14, 16, 18, 19, 20, 21, 22],
    [0, 0, 1, 4, 6, 8, 10, 12, 14, 16, 18, 19, 20, 21],
    [0, 0, 0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 19, 20],
    [0, 0, 0, 1, 2, 4, 6, 8, 10, 12, 14, 16, 18, 19],
    [0, 0, 0, 0, 1, 2, 4, 6, 8, 10, 12, 14, 16, 18],
    [0, 0, 0, 0, 0, 1, 2, 4, 6, 8, 10, 12, 14, 16],
    [0, 0, 0, 0, 0, 0, 1, 2, 4, 6, 8, 10, 12, 14],
    [0, 0, 0, 0, 0, 0, 0, 1, 2, 4, 6, 8, 10, 12],
    [0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 4, 6, 8, 10],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 4, 6, 8],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 4, 6],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 4],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]
]


def get_age_group(age):
    # age group
    age_group = 0
    if(age <= 22):
        age_group = 1
    elif(age > 22 and age <= 24):
        age_group = 2
    elif(age > 24 and age <= 27):
        age_group = 3
    elif(age > 27 and age <= 30):
        age_group = 4
    elif(age > 30 and age <= 33):
        age_group = 5
    elif(age > 33 and age <= 36):
        age_group = 6
    elif(age > 36 and age <= 39):
        age_group = 7
    elif(age > 39 and age <= 42):
        age_group = 8
    elif(age > 42 and age <= 45):
        age_group = 9
    elif(age > 45 and age <= 48):
        age_group = 10
    elif(age > 48 and age <= 51):
        age_group = 11
    elif(age > 51 and age <= 54):
        age_group = 12
    elif(age > 54 and age <= 57):
        age_group = 13
    elif(age > 57 and age <= 60):
        age_group = 14
    else:
        print("invalid age")
    return age_group


def get_pushup_points(age_group, num_of_pushup):
    PUSHUP_TABLE.reverse()
    print(age_group)
    print(num_of_pushup)
    max_row = len(PUSHUP_TABLE[num_of_pushup-1])
    if(age_group-1 >= max_row):
        age_group = max_row
    return(PUSHUP_TABLE[num_of_pushup-1][age_group-1])


def get_situp_points(age_group, num_of_situp):
    SITUP_TABLE.reverse()
    max_row = len(SITUP_TABLE[num_of_situp-1])
    if(age_group-1 >= max_row):
        age_group = max_row
    return(SITUP_TABLE[num_of_situp-1][age_group-1])


def get_running_points(age_group, run_min, run_seconds):
    col = 0
    if run_min <= 8:
        col += 0
    elif run_min == 9:
        col += 3
    elif run_min == 10:
        col += 9
    elif run_min == 11:
        col += 15
    elif run_min == 12:
        col += 20
    elif run_min == 13:
        col += 25
    elif run_min == 14:
        col += 30
    elif run_min == 15:
        col += 35
    elif run_min == 16:
        col += 40
    elif run_min == 17:
        col += 45
    elif run_min >= 18:
        col += 50

    if run_min == 8 or run_min == 18:
        if run_seconds == 30:
            col += 1
        elif run_seconds == 40:
            col += 2
        elif run_seconds == 50:
            col += 3
    else:
        if(run_seconds != 0):
            col += int(run_seconds / 10)

    max_row = len(RUN_TABLE[col])
    if(age_group > max_row-1):
        age_group = max_row-1

    return RUN_TABLE[col][age_group]


def print_total_points(total_points):
    print("total points : " + str(total_points))
    if (total_points >= 90):
        print("you gotten commando/diver gold $500")
    elif(total_points >= 85):
        print("you gotten gold $500")
    elif(total_points >= 75):
        print("you gotten silver $300")
    elif(total_points >= 61):
        print("you gotten a pass with incentive $200")
    elif(total_points >= 51):
        print("you gotten a pass, try harder for incentive!")
    else:
        print("Fail, you need 51 points to pass")


agegroup = get_age_group(age)
total_points += get_pushup_points(agegroup,pushup)
total_points += get_situp_points(agegroup,situp)
total_points += get_running_points(agegroup,min,sec)
print_total_points(total_points)


if __name__ == '__main__':
     points = get_running_points(10, 9, 30)
